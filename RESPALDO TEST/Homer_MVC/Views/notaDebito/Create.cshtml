@model Homer_MVC.IcebergModel.NotasContablesModel

@{
    ViewBag.Title = "Nota Debito Cliente";
    ViewBag.Icono = "fa fa-th-list";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*Leo*@
@section Styles {
    @Styles.Render("~/bundles/select2/css")
    <link href="~/Vendor/datatables.net-bs/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/Vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
}

<div class="panel-body">
    <div class="panel-heading" style="background-color:white;  border:solid 1px; border-color:#e4e5e7">
        <div class="panel-body">

            <div id="hbreadcrumb" class="pull-right">

                <button type="button" class="btn btn-mini btn-default" style="border-radius:25px" data-container="body" data-toggle="popover" data-placement="left" data-title="Enlaces" data-content="<ul>@ViewBag.nombreEnlaces</ul>" data-html="true">
                    <i class="text-info fa fa-tags"></i>
                </button>
                <button type="button" class="btn btn-mini btn-default" style="border-radius:25px" data-container="body" data-toggle="popover" data-placement="left" data-title="Documentos" data-content="<ul></i><a href=''>Documento 1</a></ul>  <ul></i><a href=''>Documento 2</a></ul> <ul></i><a href=''>Documento 3</a></ul>" data-html="true">
                    <i class="text-primary fa fa-files-o"></i>
                </button>
                <button type="button" class="btn btn-mini btn-default" style="border-radius:25px" data-container="body" data-toggle="popover" data-placement="left" data-title="Favoritos" data-content="@ViewBag.Favoritos" data-html="true">
                    <i class="text-warning fa fa-star"></i>
                </button>

            </div>
            <h3 class="font-light m-b-xs">
                <i class="text-info @ViewBag.Icono"></i>&nbsp;&nbsp;@ViewBag.Title
            </h3>
            <small>Registro @ViewBag.Title</small>
        </div>
    </div>
</div>

<div class="panel-body" style="padding-top:0px;">
    <div class="hpanel">
        @if (TempData["mensaje"] != null)
        {
            <br />
            <div class="alert alert-success  alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" arial-label="close"><span aria-hidden="true">&times;</span></button>
                <p><i class="fa fa-check fa-2x"></i> @TempData["mensaje"]</p>
            </div>
        }

        @if (TempData["mensaje_error"] != null)
        {
            <br />

        }

        <div class="alert alert-danger alert-dismissible" id="mensaje" style="display: none">
            <button type="button" class="close" data-dismiss="alert" arial-label="close"><span aria-hidden="true">&times;</span></button>
            <p><i class="fa fa-times fa-2x"></i> Por favor digite los campos obligatorios</p>
        </div>

        <div id="tabs" class="tab-content">

            <ul id="tabs-crear" class="nav nav-tabs">
                <li class="principal active"><a data-toggle="tab" href="#crear"><i class="fa fa-th-list"></i>&nbsp;&nbsp;@ViewBag.Title</a></li>
                <li class="busqueda" onclick="irBrowser()"><a data-toggle="tab"><i class="fa fa-search"></i>&nbsp;&nbsp;Busqueda</a></li>
            </ul>

            <div id="crear" class="tab-pane active">
                <div class="panel-body">
                    @using (Html.BeginForm("Create", "notaDebito", FormMethod.Post))
                    {

                        @Html.Hidden("menu")

                    <div class="panel-body-btns text-right">
                        <button type="button" class="btn btn-info" id="guardar"><i class="fa fa-save"></i>Guardar</button>
                        <button class="btn btn-info" style="display:none" id="guardardefinitivo"><i class="fa fa-save"></i> Guardar</button>

                    </div>

                        <div class="hpanel">
                            <div class="panel-heading hbuilt" style="background-color:#e4e5e7">
                                <div class="panel-tools">
                                    <a class="showhide"><i class="fa fa-chevron-up"></i></a>
                                </div>
                                Datos Generales
                            </div>
                            <div class="panel-body">
                                <div class="form-horizontal">

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Tipo Documento:&nbsp;<span class="text-danger">*</span></label>
                                            <div class="col-md-6">
                                                @Html.DropDownListFor(model => model.tipo, null, "", htmlAttributes: new { @class = "form-control js-source-states", @placeholder = "Seleccione", @required = "required" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Bodega:&nbsp;<span class="text-danger">*</span></label>
                                            <div class="col-md-6">
                                                <select class="form-control js-source-states" id="selectBodegas" name="bodega" required="required">
                                                    <option></option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group">

                                            <label class="control-label col-md-4">Nit:&nbsp;<span class="text-danger">*</span></label>
                                            <div class="col-md-6">
                                                @Html.DropDownList("nit", null, "", htmlAttributes: new { @class = "form-control js-source-states", @placeholder = "Seleccione", @required = "required" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Vendedor:&nbsp;<span class="text-danger">*</span></label>
                                            <div class="col-md-6">
                                                @Html.DropDownList("vendedor", null, "", htmlAttributes: new { @class = "form-control js-source-states", @placeholder = "Seleccione", @required = "required" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Perfil Contable:&nbsp;<span class="text-danger">*</span></label>
                                            <div class="col-md-6">
                                                <select class="form-control js-source-states" id="perfil" name="perfilcontable" required="required">
                                                    <option></option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Factura:&nbsp;</label>
                                            <div class="col-md-5">
                                                @Html.EditorFor(model => model.tipofactura, new { htmlAttributes = new { @type = "hidden", @class = "form-control", @readonly = "" } })
                                                @Html.EditorFor(model => model.prefijo, new { htmlAttributes = new { @type = "hidden", @class = "form-control", @readonly = "" } })
                                                <input type="text" name="idtipo" id="idtipo" class="form-control" value="" readonly="readonly" />
                                                <input type="text" name="descripcion" id="descripcion" class="form-control" value="" readonly="readonly" />
                                                @Html.EditorFor(model => model.documento, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })

                                            </div>
                                            <div class="col-md-2">
                                                <button class="btn btn-info" type="button" data-toggle="modal" data-target="#modalFacturas"><i class="fa fa-search"></i></button>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Observaciones:&nbsp;</label>
                                            <div class="col-md-6">
                                                @Html.EditorFor(model => model.nota1, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6"></div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Valor Factura:&nbsp;</label>
                                            <div class="col-md-6">
                                                <input type="text" name="valorFactura" id="valorFactura" class="form-control suma" value="" readonly="readonly" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6"></div>

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Valor:&nbsp;<span class="text-danger">*</span></label>
                                            <div class="col-md-6">
                                                @Html.EditorFor(model => model.costo, new { htmlAttributes = new { @class = "form-control suma", @required = "required", @onkeyup = "return miles(this.id)" } })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6"></div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">% Iva:&nbsp;</label>
                                            <div class="col-md-2">
                                                <input type="text" name="por_iva" id="por_iva" class="form-control" value="" min="0" max="100" maxlength="5" step="any" onkeypress="return valida(event, this.id)" />
                                            </div>
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.iva, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "text-align:right" } })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6"></div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">% Retencion:&nbsp;</label>
                                            <div class="col-md-2">
                                                @Html.EditorFor(model => model.por_retencion, new { htmlAttributes = new { @type = "text", @class = "form-control", @min = "0", @max = "100", @step = "any", @onkeypress = "return valida(event, this.id)" } })
                                            </div>
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.retencion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "text-align:right" } })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6"></div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">% Reteica:&nbsp;</label>
                                            <div class="col-md-2">
                                                @Html.EditorFor(model => model.por_retencion_ica, new { htmlAttributes = new { @type = "text", @class = "form-control", @min = "0", @max = "100", @step = "any", @onkeypress = "return valida(event, this.id)" } })
                                            </div>
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.retencion_ica, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "text-align:right" } })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6"></div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">% Reteiva:&nbsp;</label>
                                            <div class="col-md-2">
                                                @Html.EditorFor(model => model.por_retencion_iva, new { htmlAttributes = new { @type = "text", @class = "form-control", @min = "0", @max = "100", @step = "any", @onkeypress = "return valida(event, this.id)" } })
                                            </div>
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.retencion_iva, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "text-align:right" } })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6"></div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Total:&nbsp;</label>
                                            <div class="col-md-6">
                                                @Html.EditorFor(model => model.valor_total, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "text-align:right" } })
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@*modal facturas*@
<div class="modal fade hmodal-info" id="modalFacturas" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="color-line"></div>
            <div class="modal-header text-center">
                <h4 class="modal-title">Facturas</h4>
                <br />
                @* ****************************************************************************************** Filtros Modal ****************************************************************************************** *@
                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="control-label col-md-4">Tipo Documento:&nbsp;</label>
                        <div class="col-md-6">
                            @Html.DropDownList("tipo_documentoFiltro", null, "Seleccione", htmlAttributes: new { @class = "form-control js-source-states", @placeholder = "Seleccione", })
                        </div>
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="control-label col-md-4">Factura:&nbsp;</label>
                        <div class="col-md-8">
                            @Html.Editor("txtFactura", new { htmlAttributes = new { @class = "form-control", @placeholder = "Digite numero factura" } })
                        </div>
                    </div>
                </div>
                <br />
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="input-daterange input-group" id="datepicker">
                                <input type="text" class="input-sm form-control" name="fechaDesde" id="fechaDesde" placeholder="Fecha Inicio" />
                                <span class="input-group-addon">Hasta</span>
                                <input type="text" class="input-sm form-control" name="fechaHasta" id="fechaHasta" placeholder="Fecha Fin" />
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <div class="col-md-6">
                                    <button class="btn btn-primary" type="button" id="btnBuscarDocumento"><i class="fa fa-search" aria-hidden="true"></i>&nbsp;&nbsp;Buscar</button>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-10" id="errorFechas" style="display:none">
                            <div class="alert alert-danger" role="alert">
                                La fecha inicial debe ser menor a la fecha final
                            </div>
                        </div>
                    </div>
                </div>
                @* *************************************************************************************** Final Filtros Modal **************************************************************************************** *@
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div id="div-mensaje-buscar">
                    </div>
                    <table class="table table-striped table-bordered table-hover" id="tablaPaginada">
                        <thead>
                            <tr>
                                <th style="text-align:center">Seleccione</th>
                                <th style="text-align:center">Fecha</th>
                                <th style="text-align:center">Tipo</th>
                                <th style="text-align:center">Número</th>
                                <th style="text-align:center">Valor Total</th>
                                @*<th style="text-align:center">Valor Aplicado</th>*@
                                <th style="text-align:center">Vencimiento</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                <button type="button" id="btnGuardarFac" data-dismiss="modal" class="btn btn-primary">Aceptar</button>
            </div>
        </div>
    </div>
</div>

@*modal porcentaje erroneo*@
<div class="modal fade" id="modal_porcentajes" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Error en porcentaje</h5>
            </div>
            <div class="modal-body">
                El valor del porcentaje no puede ser mayor a 100
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@*modal error documentoDescuadrado*@
@***********************************************************************************************************@
<div id="modal_diferencia" class="modal" tabindex="-1" aria-hidden="true" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="color-line"></div>
            <div class="modal-header text-center">
                <div class="alert alert-danger  alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" arial-label="close"><span aria-hidden="true">&times;</span></button>
                    <p><i class="fa fa-times fa-2x"></i> @TempData["mensaje_error"]</p>
                </div>
                @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                <h4 class="modal-title">Error, los valores no coinciden</h4>
            </div>
            @if (ViewBag.documentoDescuadrado != null)
            {
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="table-responsive">
                                <div id="div-mensaje-buscar"></div>
                                <table class="table table-striped table-bordered table-hover" id="tablaPaginada">
                                    <thead>
                                        <tr>
                                            <th style="text-align:center">Cuenta</th>
                                            <th style="text-align:center">Parametro</th>
                                            <th style="text-align:center">Debito</th>
                                            <th style="text-align:center">Credito</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in ViewBag.documentoDescuadrado)
                                        {
                                            <tr>
                                                <th style="text-align:center">@item.NumeroCuenta</th>
                                                <th style="text-align:center">@item.DescripcionParametro</th>
                                                <th style="text-align:center">@Convert.ToInt32(item.ValorDebito)</th>
                                                <th style="text-align:center">@Convert.ToInt32(item.ValorCredito)</th>
                                            </tr>
                                        }
                                        <tr>
                                            <th style="text-align:center">&nbsp;</th>
                                            <th style="text-align:center">&nbsp;</th>
                                            <th style="text-align:center">@Convert.ToInt32(ViewBag.calculoDebito)</th>
                                            <th style="text-align:center">@Convert.ToInt32(ViewBag.calculoCredito)</th>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>}
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="cerrarModal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@*modal Nota registrado*@
<div id="modalNota" class="modal" tabindex="-1" aria-hidden="true" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="color-line"></div>
            <div class="modal-header text-center">
                @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                <h4 class="modal-title">Nota debito registrada con éxito</h4>
            </div>
            <div class="modal-body">
                <div class="row" style="text-align:center;">
                    <h4>Se registro la nota debito con el número</h4> <h3><span class="label label-default">@ViewBag.numNotaCreado</span></h3>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="cerrarModalNota">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/select2/js")
    <script src="~/Vendor/datatables/media/js/jquery.dataTables.min.js"></script>
    <script src="~/Vendor/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Vendor/datatables.net-buttons/js/buttons.html5.min.js"></script>
    <script src="~/Vendor/datatables.net-buttons/js/buttons.print.min.js"></script>
    <script src="~/Vendor/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/Vendor/datatables.net-buttons-bs/js/buttons.bootstrap.min.js"></script>
    <script src="~/Vendor/datatablesExcelExport/dataTable1.4.0-buttons.js"></script>
    <script src="~/Vendor/datatablesExcelExport/JSZip3.1.3.min.js"></script>
    <script src="~/Vendor/pdfmake/build/pdfmake.min.js"></script>
    <script src="~/Vendor/pdfmake/build/vfs_fonts.js"></script>
    <script src="~/Vendor/datatablesExcelExport/jsZipDataTables.js"></script>
    <script src="~/Vendor/moment/min/moment.min.js"></script>
    <script src="~/Vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>

    <script type="text/javascript">
        var i = 0;
        var valor_total = 0;

        function irBrowser() {
            window.location.href = '@Url.Action("Browser", "notaDebito")?menu=' + @ViewBag.id_menu;
        }

        $(document).ready(function () {
            $(".js-source-states").select2();
            $('#menu').val(@ViewBag.id_menu);

            $('#fechaDesde').datetimepicker({
                format: 'DD/MM/YYYY'
            });

            $('#fechaHasta').datetimepicker({
                format: 'DD/MM/YYYY'
            });

            $('#por_retencion_iva').val('0');
            $('#por_retencion_ica').val('0');
            $('#por_retencion').val('0');
            $('#por_iva').val('0');
        });

        $('#cerrarModalNota').click(function () {
            $('#modalNota').hide();
        });

        $('#cerrarModal').click(function () {
            $('#modal_diferencia').hide();
        });

        $('#guardar').click(function () {
            var error = 0;
            if ($('#iva').val() == "") {
                error = error+1;
            }
            if ($('#retencion').val() == "") {
                error = error+1;
            }
            if ($('#retencion_ica').val() == "") {
                error = error+1;
            }
            if ($('#retencion_iva').val() == "") {
                error = error+1;
            }
            if ($('#valor_total').val() == "") {
                error = error+1;
            }
            if (error == 0) {
                setTimeout(function () {
                    $("#guardardefinitivo").trigger('click');
                }, 50);
            }
            else {
               swal("Debe ingresar todos los campos obligatorios!", "", "warning");
            }
        });

        $('#btnGuardarFac').click(function () {
            /*var idencab = $('input:radio[name=seleccion]:checked').val();
            $('#prefijo').empty();
            $('#prefijo').val(idencab);*/
            var asd = $('input:radio[name=seleccion]:checked').attr("id");

            var tp = $('#tp' + asd).val();
            $('#tipofactura').empty();
            $('#tipofactura').val(tp);
            console.log('el prefijo del documento seleccionado es ' + tp);

            var pre = $('#pre' + asd).val();
            $('#prefijo').empty();
            $('#prefijo').val(pre);
            console.log('el prefijo del documento seleccionado es ' + pre);

            var tipo = $('#tipo' + asd).val();
            $('#idtipo').empty();
            $('#idtipo').val(tipo);
            console.log('el tipo del documento seleccionado es ' + tipo);

            var des = $('#desc' + asd).val();
            $('#descripcion').empty();
            $('#descripcion').val(des);
            console.log('la descripcion del documento seleccionado es ' + des);

            var num = $('#numero' + asd).val();
            $('#documento').empty();
            $('#documento').val(num);
            console.log('el numero del documento seleccionado es ' + num);

            var deuda = $('#input' + asd).val();
            $('#valorFactura').empty();
            $('#valorFactura').val(addCommas(deuda));
            console.log('la deuda del documento seleccionado es ' + deuda);

            var rete = $('#retencion' + asd).val();
            $('#por_retencion').empty();
            $('#por_retencion').val(rete);
            $('#por_retencion').toLocaleString('de-DE', { style: 'percent' });
            console.log('el porcentaje de retencion del documento seleccionado es ' + rete);

            var ica = $('#reteica' + asd).val();
            $('#por_retencion_ica').empty();
            $('#por_retencion_ica').val(ica);
            $('#por_retencion_ica').toLocaleString('de-DE', { style: 'percent' });
            console.log('el porcentaje de rete ica del documento seleccionado es ' + rete);
            var iva = $('#reteiva' + asd).val();
            $('#por_retencion_iva').empty();
            $('#por_retencion_iva').val(iva);
            console.log('el porcentaje de rete iva del documento seleccionado es ' + rete);
            $('#por_iva').val('0');
        });

        $('#tipo').change(function () {
            $.ajax({
                url: '/gestionVhNuevo/BuscarBodegasPorDocumento',
                data: {
                    id: $('#tipo').val()
                },
                type: "post",
                cache: false,
                success: function (data) {
                    console.log(data);
                    $('#selectBodegas').empty();
                    $('#selectBodegas').append($('<option>', {
                        value: '',
                        text: ''
                    }));
                    for (var i = 0; i < data.buscarBodega.length; i++) {
                        $('#selectBodegas').append($('<option>', {
                            value: data.buscarBodega[i].id,
                            text: data.buscarBodega[i].bodccs_nombre
                        }));
                    }
                }
            });

            $.ajax({
                url: '/movcontables/BuscarConceptosPorDocumento',
                data: {
                    tipo: $('#selectTipoDocumento').val()
                },
                type: "post",
                cache: false,
                success: function (data) {
                    console.log(data)

                    $('#concepto').empty();
                    $('#concepto2').empty();
                    $("#concepto").append('<option></option>')
                    $("#concepto2").append('<option></option>')

                    if (data.concepto.length > 0) {
                        for (var i = 0; i < data.concepto.length; i++) {
                            $("#concepto").append('<option value="' + data.concepto[i].id + '">' + data.concepto[i].Descripcion + '</option>')
                        }
                    }

                    if (data.concepto2.length > 0) {
                        for (var i = 0; i < data.concepto2.length; i++) {
                            $("#concepto2").append('<option value="' + data.concepto2[i].id + '">' + data.concepto2[i].Descripcion + '</option>')
                        }
                    }
                }
            });
        });

        $('#selectBodegas').change(function () {
            $.ajax({
                url: '/compraRepuestos/BuscarPerfilPorBodega',
                data: {
                    bodega: $('#selectBodegas').val(),
                    tipoD: $('#tipo').val()
                },
                type: "post",
                cache: false,
                success: function (data) {
                    $('#perfil').empty();
                    $('#perfil').append($('<option>', {
                        value: '',
                        text: ''
                    }));
                    for (var i = 0; i < data.length; i++) {
                        $('#perfil').append($('<option>', {
                            value: data[i].id,
                            text: data[i].perfil
                        }));
                    }
                }
            });
        });

        $("#nit").change(function () {
            if ($.fn.dataTable.isDataTable('#tablaPaginada')) {
                $('#tablaPaginada').dataTable().fnDestroy();
            }
            //$("#tablaPaginada").dataTable().fnDestroy();
            //$("#tablaPaginada").find("tbody").empty()
            $.ajax({
                url: '/notaCredito/BuscarDocumentosFiltro',
                data: {
                    nit: $('#nit').val()
                },
                type: "post",
                cache: false,
                success: function (data) {
                    console.log(data)
                    for (var i = 0; i < data.length; i++) {
                        $("#tablaPaginada").find("tbody").append('<tr align="center">'
                            + '<td>'
                            //campos ocultos para capturar el tipo de documento, el numero de la factura y la descripcion
                            + '<input type="hidden"  name="idval" id="tp' + data[i].numero + '" value="' + data[i].tp + '" />'
                            + '<input type="hidden"  name="idval" id="pre' + data[i].numero + '" value="' + data[i].id + '" />'
                            + '<input type="hidden"  name="idval" id="tipo' + data[i].numero + '" value="' + data[i].prefijo + '" />'
                            + '<input type="hidden"  name="idval" id="desc' + data[i].numero + '" value="' + data[i].descripcion + '" />'
                            + '<input type="hidden"  name="idval" id="numero' + data[i].numero + '" value="' + data[i].numeroFactura + '" />'
                            + '<input type="radio" class="i-checks" name="seleccion" id="' + data[i].numero + '" value="' + data[i].tipo + " - " + data[i].numero + '" /></td>'
                            + '<td>' + data[i].fecha + '</td>'
                            + '<td>' + data[i].tipo + '</td>'
                            + '<td>' + data[i].numero + '</td>'
                            + '<td><input type="hidden"  name="idval" id="input' + data[i].numero + '" value="' + data[i].saldo + '" />' + addCommas(data[i].valor_total) + '</td>'
                            //+ '<td>' + addCommas(data[i].valor_aplicado) + '</td>'
                            + '<td>'
                            //campos ocultos utilizados para cargar los porcentajes de la factura seleccionada
                            + '<input type="hidden"  name="idval" id="retencion' + data[i].numero + '" value="' + data[i].retencion + '" />'
                            + '<input type="hidden"  name="idval" id="reteica' + data[i].numero + '" value="' + data[i].reteIca + '" />'
                            + '<input type="hidden"  name="idval" id="reteiva' + data[i].numero + '" value="' + data[i].reteIva + '" />'
                            + data[i].vencimiento + '</td>'
                            + '</tr>');
                    }
                },
                complete: function (data) {
                    $('#tablaPaginada').dataTable({
                        //dom: "<''<'col-sm-4'l><'col-sm-4 text-center'B><'col-sm-4'f>>t<'col-sm-4'i>p",
                        dom: "<''<'col-md-6'l><'col-md-6'f>>t<'col-md-4'i><'col-md-8 text-right'pB>",
                        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        buttons: [
                            { extend: 'excel', className: 'btn-sm', text: 'Exportar a Excel' },
                            //{ extend: 'pdf', className: 'btn-sm', text: 'PDF' },
                            //{ extend: 'print', className: 'btn-sm', text: 'Imprimir' },
                        ]
                    });
                }
            });
        });

        // *************************************************************************************** Boton Filtros Modal *****************************************************************************************//
        $('#btnBuscarDocumento').click(function () {

            if ($.fn.dataTable.isDataTable('#tablaPaginada')) {
                $('#tablaPaginada').dataTable().fnDestroy();
            }
            //$('#tablaPaginada').dataTable().fnDestroy();
            $.ajax({
                url: '/notaCredito/BuscarDocumentosFiltro',
                data: {
                    nit: $('#nit').val(),
                    desde: $('#fechaDesde').val(),
                    hasta: $('#fechaHasta').val(),
                    id_documento: $('#tipo_documentoFiltro').val(),
                    factura: $('#txtFactura').val()
                },
                type: "post",
                cache: false,
                success: function (data) {
                    console.log(data);
                    if (data != 0) {
                        $('#errorFechas').hide();
                        $('#tablaPaginada').find('tbody').empty();
                        for (var i = 0; i < data.length; i++) {
                            $("#tablaPaginada").find("tbody").append('<tr align="center">'
                                    + '<td>'
                                        //campos ocultos para capturar el tipo de documento, el numero de la factura y la descripcion
                                        + '<input type="hidden"  name="idval" id="pre' + data[i].numero + '" value="' + data[i].prefijo + '" />'
                                        + '<input type="hidden"  name="idval" id="tipo' + data[i].numero + '" value="' + data[i].tipodoc + '" />'
                                        + '<input type="hidden"  name="idval" id="desc' + data[i].numero + '" value="' + data[i].descripcion + '" />'
                                        + '<input type="hidden"  name="idval" id="numero' + data[i].numero + '" value="' + data[i].numeroFactura + '" />'
                                        + '<input type="radio" class="i-checks" name="seleccion" id="' + data[i].numero + '" value="' + data[i].tipo + " - " + data[i].numero + '" /></td>'
                                    + '<td>' + data[i].fecha + '</td>'
                                    + '<td>' + data[i].tipo + '</td>'
                                    + '<td>' + data[i].numero + '</td>'
                                    + '<td><input type="hidden"  name="idval" id="input' + data[i].numero + '" value="' + data[i].saldo + '" />' + addCommas(data[i].valor_total) + '</td>'
                                    //+ '<td>' + addCommas(data[i].valor_aplicado) + '</td>'
                                    + '<td>'
                                        //campos ocultos utilizados para cargar los porcentajes de la factura seleccionada
                                        + '<input type="hidden"  name="idval" id="retencion' + data[i].numero + '" value="' + data[i].retencion + '" />'
                                        + '<input type="hidden"  name="idval" id="reteica' + data[i].numero + '" value="' + data[i].reteIca + '" />'
                                        + '<input type="hidden"  name="idval" id="reteiva' + data[i].numero + '" value="' + data[i].reteIva + '" />'
                                        + data[i].vencimiento + '</td>'
                                + '</tr>');
                        }
                    } else {
                        $('#errorFechas').hide();
                        $('#tablaPaginada').find('tbody').empty();
                    } if ($('#fechaDesde').val() > $('#fechaHasta').val()) {
                        $('#errorFechas').show();
                    }
                },
                complete: function (data) {
                    if (data != 0) {
                        $('#tablaPaginada').dataTable({
                            //"ajax": 'api/datatables.json',
                            //dom: "<''<'col-sm-4'l><'col-sm-4 text-center'B><'col-sm-4'f>>t<'col-sm-4'i>p",
                            dom: "<''<'col-md-6'l><'col-md-6'f>>t<'col-md-4'i><'col-md-8 text-right'pB>",
                            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            buttons: [
                                { extend: 'excel', className: 'btn-sm', text: 'Exportar a Excel' },
                                //{ extend: 'pdf', title: 'ExampleFile', className: 'btn-sm', text: 'PDF' },
                                //{ extend: 'print', className: 'btn-sm', text: 'Imprimir' }
                            ]
                        });
                    }
                }
            });
        });
        // ************************************************************************************* FIN Boton Filtros Modal ****************************************************************************************//

        //---------------------------------- NUEVO VALIDACION CAMPOS MONETARIOS ---------------------------------
        $("#costo").change(function () {
            var iva = decimal($("#por_iva").val());
            var rete = decimal($("#por_retencion").val());
            var rica = decimal($("#por_retencion_ica").val());
            var riva = decimal($("#por_retencion_iva").val());

            if ($("#por_iva").val() != "" || $("#por_retencion").val() != "" || $("#por_retencion_ica").val() != "" || $("#por_retencion_iva").val() != "") {
                var valor_iva = Math.round((parseInt(quitCommas($('#costo').val())) * parseFloat($("#por_iva").val())) / 100) || 0;
                var valor_retencion = Math.round((parseInt(quitCommas($('#costo').val())) * parseFloat($("#por_retencion").val())) / 100) || 0;
                var valor_reteIca = Math.round((parseInt(quitCommas($('#costo').val())) * parseFloat($("#por_retencion_ica").val())) / 1000) || 0;
                $('#iva').val(addCommas(valor_iva));
                $('#retencion').val(addCommas(valor_retencion));
                if ($('#iva').val() == 0) {
                    $('#retencion_iva').val('0');
                } else {
                    var valor_reteIva = Math.round(((parseInt(quitCommas($('#iva').val())) || 0) * (parseFloat($("#por_retencion_iva").val())) || 0) / 100) || 0;
                    $('#retencion_iva').val(addCommas(valor_reteIva));
                }
                $('#retencion_ica').val(addCommas(valor_reteIca));

                ValorTotalPagado();
            }
            else {
                $('#iva').val(0);
                $('#retencion').val(0);
                $('#retencion_ica').val(0);
                $('#retencion_iva').val(0);
            }

            ValorTotalPagado()
        });

        $("#por_iva").change(function () {
            let max = parseInt(this.max);
            let valor = parseInt(this.value);
            if (valor > max) {
                $("#modal_porcentajes").modal('show');
                this.value = max;
                calcularIVA();
            } else {
                calcularIVA();
            }
        });

        function calcularIVA() {
            //var valor = decimal($('#por_iva').val());
            var valor_iva = Math.round((parseInt(quitCommas($('#costo').val())) * parseFloat($('#por_iva').val())) / 100 || 0);
            $('#iva').val(addCommas(valor_iva));

            var valor_reteIva = Math.round((parseInt(quitCommas($('#iva').val())) * parseFloat($('#por_retencion_iva').val())) / 100 || 0);
            $('#retencion_iva').val(addCommas(valor_reteIva));

            ValorTotalPagado();
        }

        $("#por_retencion").change(function () {
            let max = parseInt(this.max);
            let valor = parseInt(this.value);
            if (valor > max) {
                $("#modal_porcentajes").modal('show');
                this.value = max;
                calcularRetencion();
            } else {
                calcularRetencion();
            }
        });

        function calcularRetencion() {
            //var valor = decimal($('#por_retencion').val());
            var valor_retencion = Math.round((parseInt(quitCommas($('#costo').val())) * parseFloat($('#por_retencion').val())) / 100 || 0);
            $('#retencion').val(addCommas(valor_retencion));

            ValorTotalPagado();
        }

        $("#por_retencion_ica").change(function () {
            let max = parseInt(this.max);
            let valor = parseInt(this.value);
            if (valor > max) {
                $("#modal_porcentajes").modal('show');
                this.value = max;
                calcularReteIca();
            } else {
                calcularReteIca();
            }
        });

        function calcularReteIca() {
            var valor_reteIca = Math.round((parseInt(quitCommas($('#costo').val())) * (parseFloat($('#por_retencion_ica').val()))) / 1000 || 0);
            $('#retencion_ica').val(addCommas(valor_reteIca));

            ValorTotalPagado();
        }

        $("#por_retencion_iva").change(function () {
            let max = parseInt(this.max);
            let valor = parseInt(this.value);
            if (valor > max) {
                $("#modal_porcentajes").modal('show');
                this.value = max;
                calcularReteIva();
            } else {
                calcularReteIva();
            }
        })

        function calcularReteIva() {
            if ($('#iva').val() == 0 || $('#por_retencion_iva').val() == 0) {
                $('#retencion_iva').val('0');
            } else {
                var valor_reteIva = Math.round(((parseInt(quitCommas($('#iva').val())) || 0) * (parseFloat($("#por_retencion_iva").val())) || 0) / 100) || 0;
                $('#retencion_iva').val(addCommas(valor_reteIva));
            }

            ValorTotalPagado();
        }

        function ValorTotalPagado() {
            var valorApagar = (parseInt(quitCommas($('#costo').val())));
            var valorRetencion = (parseInt(quitCommas($('#retencion').val()))) || 0;
            var valorReteIca = (parseInt(quitCommas($('#retencion_ica').val()))) || 0;
            var valorReteIva = (parseInt(quitCommas($('#retencion_iva').val()))) || 0;
            var valorIVA = (parseInt(quitCommas($('#iva').val())));

            var valorTotal = valorApagar + valorIVA - valorRetencion - valorReteIca - valorReteIva;
            $('#valor_total').val(addComas(parseInt(valorTotal))) || 0;

        }

        var numero_miles = "";
        function formatNumber(n) {
            n = String(n).replace(/\D/g, "");
            return n === '' ? n : String(n).replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        function miles(id) {
            numero_miles = formatNumber($('#' + id + '').val());
            $('#' + id + '').val(numero_miles);
        }

        function addCommas(nStr) {
            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + '.' + '$2');
            }
            return x1 + x2;
        }

        function quitCommas(nStr) {
            nStr.toString();
            var s = nStr.replace(/\./g, "");
            return s;
        }

        function decimal(nStr) {
            nStr.toString();
            console.log(nStr);
            var s = nStr.replace(/\./g, ",");
            return s;
        }

        function soloNumeros(e) {
            key = e.keyCode || e.which;
            tecla = String.fromCharCode(key).toLowerCase();
            letras = "1234567890.";
            especiales = "8-37-39-46";

            tecla_especial = false
            for (var i in especiales) {
                if (key == especiales[i]) {
                    tecla_especial = true;
                    break;
                }
            }
            if (letras.indexOf(tecla) == -1 && !tecla_especial) {
                return false;
            }
        }

        function valida(e, id)	//Solo numeros y SOLO 1 punto decimal
        {
            var key = (document.all) ? e.which : e.keyCode;
            cadena =  $('#' + id + '').val();
            console.log(cadena)
            if (cadena.indexOf('.') == -1)
            {
                return (key <= 13 || (key >= 48 && key <= 57) || key == 46);
            }
            else
            {
                return (key <= 13 || (key >= 48 && key <= 57));
            }
        }


        //--------------------------------- FIN NUEVOVALIDACION CAMPOS MONETARIOS --------------------------------

        function AgregarQuitarFavorito(){
            $.ajax({
                url: '/Inicio/AgregarQuitarFavorito',
                data: {
                    id_menu: @ViewBag.id_menu,
                },
                type: "post",
                cache: false,
                success: function (data) {
                    if (data.esFavorito == true) {
                        $('#areaFavoritos').html("<i class='fa fa-close'></i>&nbsp;&nbsp;<a href='#' onclick='AgregarQuitarFavorito();return false;'>Quitar de Favoritos</a>");
                    } else {
                        $('#areaFavoritos').html("<i class='fa fa-check'></i>&nbsp;&nbsp;<a href='#' onclick='AgregarQuitarFavorito();return false;'>Agregar a Favoritos</a>");
                    }
                }
            });
        }
    </script>

    @if (TempData["mensaje_error"] != null)
    {
        <script type="text/javascript">
            $('#modal_diferencia').show();
        </script>
    }
    @if (TempData["mensaje"] != null)
    {
        <script type="text/javascript">
            $('#modalNota').show();
        </script>
    }
}
