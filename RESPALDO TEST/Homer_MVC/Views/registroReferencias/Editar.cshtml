@model Homer_MVC.Models.RegistroReferenciasModel
@using System.Globalization;

@{
    ViewBag.Title = "Referencias";
    ViewBag.Icono = "fa fa-address-book-o";
    Layout = "~/Views/Shared/_Layout.cshtml";
    CultureInfo elGR = CultureInfo.CreateSpecificCulture("el-GR");

}

@section Styles {
    @Styles.Render("~/bundles/select2/css")
    <link href="~/Vendor/datatables.net-bs/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/Vendor/bootstrap-toggle-master/css/bootstrap-toggle.min.css" rel="stylesheet" />
}


<div class="panel-body">
    <div class="hpanel">
        <div class="panel-body">
            <a class="small-header-action" href="">
                <div class="clip-header">
                    <i class="fa fa-arrow-up"></i>
                </div>
            </a>


            <div id="hbreadcrumb" class="pull-right m-t-lg">

                <button type="button" class="btn btn-sm btn-default" style="border-radius:25px" data-container="body" data-toggle="popover" data-placement="left" data-title="Enlaces" data-content="<ul>@ViewBag.nombreEnlaces</ul>" data-html="true">
                    <i class="text-info fa fa-tags"></i>
                </button>
                <button type="button" class="btn btn-sm btn-default" style="border-radius:25px" data-container="body" data-toggle="popover" data-placement="left" data-title="Documentos" data-content="<ul></i><a href=''>Documento 1</a></ul>  <ul></i><a href=''>Documento 2</a></ul> <ul></i><a href=''>Documento 3</a></ul>" data-html="true">
                    <i class="text-primary fa fa-files-o"></i>
                </button>
                <button type="button" class="btn btn-mini btn-default" style="border-radius:25px" data-container="body" data-toggle="popover" data-placement="left" data-title="Favoritos" data-content="@ViewBag.Favoritos" data-html="true">
                    <i class="text-warning fa fa-star"></i>
                </button>


            </div>
            <h2 class="font-light m-b-xs">
                <i class="text-info @ViewBag.Icono"></i>&nbsp;&nbsp;@ViewBag.Title
            </h2>
            <small>Editar @ViewBag.Title</small>
        </div>
    </div>
</div>

<div class="panel-body">
    <div class="hpanel">
        @if (TempData["mensaje"] != null)
        {
            <br />
            <div class="alert alert-success  alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" arial-label="close"><span aria-hidden="true">&times;</span></button>
                <p><i class="fa fa-check fa-2x"></i> @TempData["mensaje"]</p>
            </div>
        }

        @if (TempData["mensaje_error"] != null)
        {
            <br />
            <div class="alert alert-danger  alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" arial-label="close"><span aria-hidden="true">&times;</span></button>
                <p><i class="fa fa-times fa-2x"></i> @TempData["mensaje_error"]</p>
            </div>
        }

        <div id="tabs" class="tab-content">

            <div class="m float-e-margins text-right">
                <div class="tooltip-demo">

                    <div id="div-mensaje"></div>

                </div>
            </div>

            <ul id="tabs-crear" class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#crear"><i class="@ViewBag.Icono"></i>&nbsp;&nbsp;@ViewBag.Title</a></li>
                @if (ViewBag.precios != null)
                {
                    <li class=""><a href="#" onclick="abrirPrecios()"><i class="fa fa-dollar"></i>&nbsp;&nbsp;Precios</a></li>
                }
                @if (ViewBag.alternos != null)
                {
                    <li class=""><a href="#" onclick="abrirAlternos()"><i class="fa fa-repeat"></i>&nbsp;&nbsp;Reemplazos</a></li>
                }
                <li class=""><a href="@Url.Action("BuscarDatos","registroReferencias")"><i class="fa fa-search"></i>&nbsp;&nbsp;Búsquedas</a></li>
            </ul>

            <div id="crear" class="tab-pane active">
                <div class="panel-body">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("menu")

                        <div class="form-horizontal">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="panel-body-btns text-right">
                                <a href="@Url.Action("Crear","registroReferencias", new { menu = @ViewBag.id_menu })"><button class="btn btn-info" type="button"><i class="fa fa-folder-open-o"></i>&nbsp;&nbsp;&nbsp;Crear Nuevo</button></a>
                                <button class="btn btn-info" type="submit"><i class="fa fa-save"></i>&nbsp;&nbsp;&nbsp;Guardar</button>
                            </div>
                            <div class="hpanel" id="panelHabeasData">
                                <div class="panel-heading hbuilt" style="background-color:#e4e5e7">
                                    <div class="panel-tools">
                                        <a class="showhide"><i class="fa fa-chevron-up"></i></a>

                                    </div>
                                    <i class="@ViewBag.Icono"></i>&nbsp;&nbsp;&nbsp;Datos generales
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Codigo:&nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.ref_codigo, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @required = "required", @placeholder = "Digite codigo" } })
                                                    @Html.ValidationMessageFor(model => model.ref_codigo, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Descripción:&nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.ref_descripcion, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Digite descripcion" } })
                                                    @Html.ValidationMessageFor(model => model.ref_descripcion, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            <div class="form-group ">
                                                <label class="control-label col-md-4">Descripción Alternativa:&nbsp;</label>
                                                <div class="col-sm-6 col-md-6 col-lg-6">
                                                    @Html.EditorFor(model => model.ref_alternativa, new { htmlAttributes = new { @class = "form-control", placeholder = "Digite una descripción alternativa" } })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Porcentaje iva venta:<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @*@Html.EditorFor(model => model.por_iva, new { htmlAttributes = new { @class = "form-control", @type = "number" } })*@
                                                    @Html.DropDownList("por_iva", null, "", htmlAttributes: new { @class = "form-control js-source-states", @required = "required" })
                                                    @Html.ValidationMessageFor(model => model.por_iva, "", new { @class = "text-danger" })
                                                    <input name="textIVAVenta" id="textIVAVenta" class="form-control" type="hidden">
                                                    <input name="valIVAVenta" id="valIVAVenta" class="form-control" type="hidden">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Porcentaje iva compra:<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @*@Html.EditorFor(model => model.por_iva, new { htmlAttributes = new { @class = "form-control", @type = "number" } })*@
                                                    @Html.DropDownList("por_iva_compra", null, "", htmlAttributes: new { @class = "form-control js-source-states", @required = "required" })
                                                    @Html.ValidationMessageFor(model => model.por_iva_compra, "", new { @class = "text-danger" })
                                                    <input name="textIVACompra" id="textIVACompra" class="form-control" type="hidden">
                                                    <input name="valIVACompra" id="valIVACompra" class="form-control" type="hidden">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Unidad de Medida:<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.DropDownList("unidad_medida", null, "", htmlAttributes: new { @class = "form-control js-source-states", @required = "required", @placeholder = "Seleccione", })
                                                    @Html.ValidationMessageFor(model => model.unidad_medida, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Porcentaje Descuento:</label>
                                                <div class="col-md-6">
                                                    @*<input id="descuento" name="descuento_1" class="form-control" type="number" placeholder="Digite descuento (%)" min="0" max="100" step="any" onkeypress="return valida(event, this.id)" value="@ViewBag.descuento" />*@
                                                    @Html.EditorFor(model => model.por_dscto, new { htmlAttributes = new { @class = "form-control", @type = "number", @placeholder = "Digite descuento (%)", @min = "0", @max = "100", @step = "any", @onkeypress = "return valida(event, this.id)" } })
                                                    @Html.ValidationMessageFor(model => model.por_dscto, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Porcentaje Descuento Maximo:</label>
                                                <div class="col-md-6">
                                                    @*<input id="descuento_max" name="descuento_max_1" class="form-control" type="number" placeholder="Digite descuento (%)" min="0" max="100" step="any" onkeypress="return valida(event, this.id)" value="@ViewBag.des_max" />*@
                                                    @Html.EditorFor(model => model.por_dscto_max, new { htmlAttributes = new { @class = "form-control", @type = "number", @placeholder = "Digite descuento maximo (%)", @min = "0", @max = "100", @step = "any", @onkeypress = "return valida(event, this.id)" } })
                                                    @Html.ValidationMessageFor(model => model.por_dscto_max, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>


                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Costo:&nbsp;</label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.costo_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @readonly = "true" } })
                                                    @Html.ValidationMessageFor(model => model.costo_unitario, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <div id="error_cantidad_max" style="display:none" class="alert alert-warning">
                                                    <strong>Error</strong> El valor de cantidad mínima no puede ser superior al máximo
                                                </div>
                                                <label class="control-label col-md-4">Cantidad Máxima:&nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.ref_cantidad_max, new { htmlAttributes = new { @class = "form-control", @type = "number", @placeholder = "Digite cantidad maxima", @required = "required" } })
                                                    @Html.ValidationMessageFor(model => model.ref_cantidad_max, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>


                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Costo Emergencia:</label>
                                                <div class="col-md-6">
                                                    @*<input id="costo_eme" name="costo_emergencia_1" onkeyUp="return miles(this.id)" class="form-control" type="text" placeholder="Digite costo emergencia" value="@ViewBag.costo_emergencia" />*@
                                                    @Html.EditorFor(model => model.costo_emergencia, new { htmlAttributes = new { @onkeyUp = "return miles(this.id)", @class = "form-control", @type = "text", @placeholder = "Digite costo emergencia" } })
                                                    @Html.ValidationMessageFor(model => model.costo_emergencia, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Cantidad Mínima:&nbsp;</label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.ref_cantidad_min, new { htmlAttributes = new { @class = "form-control", @type = "number", @placeholder = "Digite cantidad minima", @readonly = "readonly" } })
                                                    @Html.ValidationMessageFor(model => model.clasificacion_id, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Proveedor:<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.DropDownList("proveedor_ppal", null, "", htmlAttributes: new { @class = "form-control js-source-states", @required = "required", @placeholder = "Seleccione", })
                                                    @Html.ValidationMessageFor(model => model.proveedor_ppal, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Vida útil:</label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.vida_util, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Digite vida util" } })
                                                    @Html.ValidationMessageFor(model => model.vida_util, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Clasificación ABC:</label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.clasificacion_ABC, new { htmlAttributes = new { @class = "form-control", @placeholder = "Digite clasificacion", @readonly = "readonly", @style = "text-transform: uppercase" } })
                                                    @Html.ValidationMessageFor(model => model.clasificacion_ABC, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Perfil Contable:<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.DropDownList("perfil", null, "", htmlAttributes: new { @class = "form-control js-source-states", @placeholder = "Seleccione", })
                                                    @Html.ValidationMessageFor(model => model.perfil, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Manejo de Inventario:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <label class="control-label col-md-8">
                                                        @Html.CheckBoxFor(model => model.manejo_inv, new { @data_toggle = "toggle", @data_size = "mini" })
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Estado:&nbsp;<span class="text-danger">*&nbsp;</span></label>
                                                <div class="col-md-6">
                                                    <label class="control-label col-md-8">
                                                        @Html.CheckBoxFor(model => model.ref_estado, new { @data_toggle = "toggle", @data_size = "mini" })
                                                    </label>
                                                </div>
                                            </div>
                                        </div>

                                        <div id="inactividad" style="display:none">
                                            <div class="col-md-6"></div>
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label class="control-label col-md-4">Razón Inactividad:&nbsp;<span class="text-danger">*&nbsp;</span></label>
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.ref_razon_inactivo, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.ref_razon_inactivo, " ", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <br />
                            <div class="hpanel" id="panelHabeasData">
                                <div class="panel-heading hbuilt" style="background-color:#e4e5e7">
                                    <div class="panel-tools">
                                        <a class="showhide"><i class="fa fa-chevron-up"></i></a>

                                    </div>
                                    <i class="@ViewBag.Icono"></i>&nbsp;&nbsp;&nbsp;Clasificación
                                </div>
                                <div class="panel-body">


                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Tipo:&nbsp;</label>
                                            <div class="col-md-6">
                                                @Html.DropDownList("tipo_id", null, "", htmlAttributes: new { @class = "form-control .js-source-states", @placeholder = "Seleccione" })
                                                @Html.ValidationMessageFor(model => model.tipo_id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Clasificación:<span class="text-danger">*</span></label>
                                            <div class="col-md-6">
                                                @Html.DropDownList("clasificacion_id", null, "", htmlAttributes: new { @class = "form-control js-source-states", @required = "required", @placeholder = "Seleccione", })
                                                @Html.ValidationMessageFor(model => model.clasificacion_id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Familia:</label>
                                            <div class="col-md-6">
                                                @Html.DropDownList("familia_id", null, "", htmlAttributes: new { @class = "form-control js-source-states", @placeholder = "Seleccione", })
                                                @Html.ValidationMessageFor(model => model.familia_id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Grupo:</label>
                                            <div class="col-md-6">
                                                @Html.DropDownList("grupo_id", null, "", htmlAttributes: new { @class = "form-control js-source-states", @placeholder = "Seleccione", })
                                                @Html.ValidationMessageFor(model => model.grupo_id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Línea:</label>
                                            <div class="col-md-6">
                                                @Html.DropDownListFor(model => model.linea_id, null, "", htmlAttributes: new { @class = "form-control js-source-states", @placeholder = "Seleccione", })
                                                @*@Html.DropDownList("linea_id", null, "", htmlAttributes: new { @class = "form-control js-source-states", @placeholder = "Seleccione", })*@
                                                @*@Html.ValidationMessageFor(model => model.linea_id, "", new { @class = "text-danger" })*@
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-4">Sub Grupo:</label>
                                            <div class="col-md-6">
                                                <select class="form-control js-source-states" id="subgrupo" name="subgrupo" placeholder="Seleccione">
                                                    <option value=""></option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <br />
                            <div class="hpanel" id="panelHabeasData">
                                <div class="panel-heading hbuilt" style="background-color:#e4e5e7">
                                    <div class="panel-tools">
                                        <a class="showhide"><i class="fa fa-chevron-up"></i></a>

                                    </div>
                                    <i class="@ViewBag.Icono"></i>&nbsp;&nbsp;&nbsp;Precios
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-12 col-md-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio Venta:&nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @*<input id="precio_1" name="precio_1" class="form-control" value="" onkeyUp="miles(this.id); agregar_precio(this.id);" placeholder="Digite valor unitario" />*@
                                                    @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "miles(this.id); agregar_precio(this.id);", @required = "required", @placeholder = "" } })
                                                    @Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-12 col-md-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio Alterno:&nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @*<input id="precio_alterno" name="precio_alterno" class="form-control" value="" onkeyUp="return miles(this.id)" placeholder="Digite valor" />*@
                                                    @Html.EditorFor(model => model.precio_alterno, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @required = "required", @placeholder = "" } })
                                                    @Html.ValidationMessageFor(model => model.precio_alterno, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-12 col-md-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio Garantia:&nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @*<input id="precio_garantia" name="precio_garantia" class="form-control" value="" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />*@
                                                    @Html.EditorFor(model => model.precio_garantia, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @required = "required", @placeholder = "" } })
                                                    @Html.ValidationMessageFor(model => model.precio_garantia, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-12 col-md-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio Diesel:&nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @*<input id="precio_diesel" name="precio_diesel" class="form-control" value="" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />*@
                                                    @Html.EditorFor(model => model.precio_diesel, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @required = "required", @placeholder = "" } })
                                                    @Html.ValidationMessageFor(model => model.precio_diesel, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio anterior:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input readonly="readonly" id="precioanterior" name="precioanterior" class="form-control" value="@ViewBag.precioanterior.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*@Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" style="display:none">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio 1:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input id="precio_1" name="precio_1" class="form-control" value="@ViewBag.precio1.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*//@Html.ValidationMessageFor(model => model., "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio 2:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input id="precio_2" name="precio_2" class="form-control" value="@ViewBag.precio2.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*@Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio 3:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input id="precio_3" name="precio_3" class="form-control" value="@ViewBag.precio3.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*@Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio 4:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input id="precio_4" name="precio_4" class="form-control" value="@ViewBag.precio4.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*@Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger"*@
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio 5:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input id="precio_5" name="precio_5" class="form-control" value="@ViewBag.precio5.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*@Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio 6:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input id="precio_6" name="precio_6" class="form-control" value="@ViewBag.precio6.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*@Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio 7:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input id="precio_7" name="precio_7" class="form-control" value="@ViewBag.precio7.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*@Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio 8:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input id="precio_8" name="precio_8" class="form-control" value="@ViewBag.precio8.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*@Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio 9:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input id="precio_9" name="precio_9" class="form-control" value="@ViewBag.precio9.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*@Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio Garantia:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input id="precioGarantia" name="precioGarantia" class="form-control" value="@ViewBag.precioGarantia.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*@Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio anterior:&nbsp;</label>
                                                <div class="col-md-6">
                                                    <input readonly="readonly" id="precioanterior" name="precioanterior" class="form-control" value="@ViewBag.precioanterior.ToString("0,0", elGR)" onkeyUp="return miles(this.id)" placeholder="Digite valor unitario" />
                                                    @* @Html.EditorFor(model => model.ref_valor_unitario, new { htmlAttributes = new { @class = "form-control", @value = "", @onkeyUp = "return miles(this.id)", @placeholder = "Digite valor unitario" } })*@
                                                    @*@Html.ValidationMessageFor(model => model.ref_valor_unitario, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="hpanel" id="panelHabeasData">
                                <div class="panel-heading hbuilt" style="background-color:#e4e5e7">
                                    <div class="panel-tools">
                                        <a class="showhide"><i class="fa fa-chevron-up"></i></a>
                                    </div>
                                    <i class="@ViewBag.Icono"></i>&nbsp;&nbsp;&nbsp;Reemplazos
                                </div>
                                <div class="panel-body" style="align-content:center">
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-4">
                                            <div class="alert alert-success" role="alert" id="eliminadoExitoso" name="guardarExitoso" style="display:none">Reemplazo eliminado con éxito </div>
                                            <table class="table table-striped table-bordered table-hover" id="tablaAlternos">
                                                <thead>
                                                    <tr style="max-width:50%">
                                                        <th style="text-align:center">Código</th>
                                                        <th style="text-align:center">Descripción</th>
                                                        <th style="text-align:center">Acciones</th>
                                                    </tr>
                                                </thead>
                                                <tbody></tbody>
                                            </table>
                                        </div>
                                        <div class="col-md-2">
                                            <button class="btn btn-success" type="button" id="asignarAlterno" name="asignarAlterno"><i class="fa fa-save"></i>&nbsp;&nbsp;&nbsp;Asignar reemplazo</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="hpanel">
                            <div class="panel-heading hbuilt" style="background-color:#e4e5e7">
                                <div class="panel-tools">
                                    <a class="showhide"><i class="fa fa-chevron-up"></i></a>

                                </div>
                                <i class="fa fa-info-circle"></i>&nbsp;&nbsp;&nbsp;Información
                            </div>
                            <div class="panel-body">

                                <div class="col-sm-3 small">
                                    <p>Creado por: @ViewBag.user_nombre_cre</p>
                                </div>

                                <div class="col-sm-3 small">
                                    <p>Fecha creación: @ViewBag.ref_fecha_creacion</p>
                                </div>

                                <div class="col-sm-3 small">
                                    <p>
                                        Actualizado por:  @{if (ViewBag.user_nombre_act == null)
                                            {
                                            <p class="text-danger">no se han realizado actualizaciones</p>
                                        }
                                        @ViewBag.user_nombre_act
                                        }
                                        </p>
                                    </div>

                                    <div class="col-sm-3 small">
                                        <p>
                                            Ultima actualización:  @{if (ViewBag.ref_fecha_actualizacion == null)
                                                {
                                                <p class="text-danger">no se han realizado actualizaciones</p>
                                            }
                                            @ViewBag.ref_fecha_actualizacion
                                            }
                                            </p>
                                        </div>

                                    </div>
                                </div>

                            }
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade hmodal-info" id="modal_alternos" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="color-line"></div>
            <div class="modal-header text-center">
                <h4 class="modal-title">Asignar Alterno</h4>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger" role="alert" id="errorAlterno" name="errorAlterno" style="display:none"> Debe seleccionar una referencia </div>
                <div class="alert alert-danger" role="alert" id="errorAlternoIgual" name="errorAlternoIgual" style="display:none"> Esta referencia ya tiene asignado este alterno </div>
                <div class="alert alert-success" role="alert" id="guardarExitoso" name="guardarExitoso" style="display:none">Alterno asignado con éxito </div>
                <div class="form-group">
                    <div class="row">
                        <label class="control-label col-md-2">Referencias:&nbsp;&nbsp;</label>
                        <div class="col-md-6">
                            @Html.DropDownList("cargarReferencia", null, "", htmlAttributes: new { @class = "form-control js-source-states", @placeholder = "Seleccione", })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="asignarFinal" name="asignarFinal" class="btn btn-success">Asignar</button>&nbsp;&nbsp;&nbsp;
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/select2/js")
    <script src="~/Vendor/datatables/media/js/jquery.dataTables.min.js"></script>
    <script src="~/Vendor/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Vendor/datatables.net-buttons/js/buttons.html5.min.js"></script>
    <script src="~/Vendor/datatables.net-buttons/js/buttons.print.min.js"></script>
    <script src="~/Vendor/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/Vendor/datatables.net-buttons-bs/js/buttons.bootstrap.min.js"></script>
    <script src="~/Vendor/pdfmake/build/pdfmake.min.js"></script>
    <script src="~/Vendor/pdfmake/build/vfs_fonts.js"></script>
    <script src="~/Vendor/bootstrap-toggle-master/js/bootstrap-toggle.min.js"></script>
    <script type="text/javascript">

        $('#asignarAlterno').click(function () {
            $.ajax({
                url: '/registroReferencias/CargarReferencias',
                data: { id_referencia: $('#ref_codigo').val() },
                type: "post",
                cache: false,
                success: function (data) {
                    $('#modal_alternos').modal('show')
                },
            });
        });

        $('#asignarFinal').click(function () {
            if ($('#cargarReferencia').val() != null && $('#cargarReferencia').val() != "") {

                $.ajax({
                    url: '/registroReferencias/asignarAlterno',
                    data: {
                        id_referenciaAlterna: $('#cargarReferencia').val(),
                        referenciaPadre: $('#ref_codigo').val(),
                        eliminar: false
                    },
                    type: "post",
                    cache: false,
                    success: function (data) {

                        if (data.data == true) {
                            listarAlternos()
                            $('#guardarExitoso').show()
                            setTimeout(function () {
                                $("#guardarExitoso").fadeOut(2500);
                            }, 3000);
                        } else if (data.data == false) {
                            $('#errorAlternoIgual').show()
                            setTimeout(function () {
                                $("#errorAlternoIgual").fadeOut(2500);
                            }, 3000);
                        }
                    },
                });
            } else {
                $('#errorAlterno').show()
                setTimeout(function () {
                    $("#errorAlterno").fadeOut(2500);
                }, 3000);
            }
        });

        function agregar_precio(id) {
            $('#precio_alterno').val($('#' + id).val());
            $('#precio_diesel').val($('#' + id).val());
        }

        function listarAlternos() {
            $.ajax({
                url: '/registroReferencias/BuscarAlternos',
                data: {
                    id_referencia: $('#ref_codigo').val()
                },
                type: "post",
                cache: false,
                success: function (data) {
                    $('#tablaAlternos').find('tbody').empty();
                    for (var i = 0; i < data.length; i++) {
                        $('#tablaAlternos').find('tbody').append(
                            '<tr>'
                            + '<td align="left">'
                            + '<input type="hidden" id="alternoId' + i + '" name="alternoId' + i + '" value="' + data[i].alterno + '"/>'
                            + data[i].alterno
                            + '</td>'
                            + '<td align="left">' + data[i].descripcion + '</td>'
                            + '<td align="center">'
                            + '<button class="btn btn-danger btn-circle" type="button" onclick="eliminarAlterno(' + i + ')"><i class="fa fa-remove"></i></button>'
                            //+ '<button class="btn btn-danger btn-circle" type="button" id="deleteAlterno" name="deleteAlterno" Value="'+data[i].alterno+'"><i class="fa fa-remove"></i></button>'
                            + '</td>'
                            + '</tr>');
                    }
                }
            });
        }

        function eliminarAlterno(id) {

            $.ajax({
                url: '/registroReferencias/asignarAlterno',
                data: {
                    id_referenciaAlterna: $('#alternoId' + id + '').val(),
                    referenciaPadre: $('#ref_codigo').val(),
                    eliminar: true
                },
                type: "post",
                cache: false,
                success: function (data) {
                    listarAlternos()
                    $('#eliminadoExitoso').show()
                    $('#eliminadoExitoso').show()
                    setTimeout(function () {
                        $("#eliminadoExitoso").fadeOut(2500);
                    }, 3000);
                }
            });
        }

        $('.js-source-states').select2();
        function abrirPrecios() {
            id = $("#ref_codigo").val()
            window.location.href = '@Url.Action("EditPrecios", "registroReferencias")?menu=' +@ViewBag.id_menu +'&&id=' + id;
        }

        function abrirAlternos() {
            id = $("#ref_codigo").val()
            window.location.href = '@Url.Action("BuscarPrecios", "registroReferencias")?menu=' +@ViewBag.id_menu +'&&id=' + id;
        }

        $('#ref_estado').change(function () {
            if ($('#ref_estado').prop('checked')) {
                $('#inactividad').hide();
                $('#ref_razon_inactivo').prop('required', false);
            } else {
                $('#ref_razon_inactivo').prop('required', true);
                $('#ref_razon_inactivo').val('');
                $('#inactividad').show();
            }
        });

        $('#grupo_id').change(function () {
            buscarSubGrupo();
        });


        $(document).ready(function () {
            listarAlternos()
            $('#ref_cantidad_max').trigger('change');   
            //$('#precio_venta').val(addCommas($('#precio_venta').val()));               
            //$('#ref_valor_unitario').val(addCommas($('#ref_valor_unitario').val())); 
            //$('#costo_u').val(addCommas($('#costo_u').val()));              
            //$('#costo_eme').val(addCommas($('#costo_eme').val()));           
            //$('#valor_unitario').val(addCommas($('#valor_unitario').val()));          
            $('#stock').hide();
            $('#valor_unitario').hide();
            //$('#precio_1').hide();
            //$('#precio_1').val(addCommas($('#precio_1').val()));

            if (!$('#ref_estado').prop('checked')) {
                //$('#cntpucrazoninactivo').val('');
                $('#ref_razon_inactivo').prop('required', true);
                $('#inactividad').show();
            }

            $('#textIVAVenta').val($('#por_iva option:selected').text());
            $('#valIVAVenta').val($('#por_iva option:selected').val());
            $('#textIVACompra').val($('#por_iva_compra option:selected').text());
            $('#valIVACompra').val($('#por_iva_compra option:selected').val());
            $('form select').each(function (i) {
                this.addEventListener('invalid', function (e) {
                    var _s2Id = 's2id_' + e.target.id; //s2 autosuggest html ul li element id
                    var _posS2 = $('#' + _s2Id).position();
                    //get the current position of respective select2
                    $('#' + _s2Id + ' ul').addClass('_invalid'); //add this class with border:1px solid red;
                    //this will reposition the hidden select2 just behind the actual select2 autosuggest field with z-index = -1
                    $('#' + e.target.id).attr('style', 'display:block !important;position:absolute;z-index:-1;top:' + (0 - $('#' + _s2Id).outerHeight() + 30) + 'px;left:' + (15 - ($('#' + _s2Id).width() / 10)) + 'px;');
                    /*
                    //Adjust the left and top position accordingly
                    */
                    //remove invalid class after 3 seconds
                    setTimeout(function () {
                        $('#' + _s2Id + ' ul').removeClass('_invalid');
                    }, 3000);
                    return true;
                }, false);
            });
            $('#ref_cantidad_max').change(function () {
                validarCantidades();
            })
            function validarCantidades() {
                var mini = 0;
                var max = 0;
                if ($('#ref_cantidad_min').val() == "") {
                    mini = 0;
                } else {
                    var mini = parseInt($('#ref_cantidad_min').val());
                }

                if ($('#ref_cantidad_max').val() == "") {
                    max = 0;
                } else {
                    var max = parseInt($('#ref_cantidad_max').val());
                }
                if (mini > max) {
                    $('#error_cantidad_max').show();
                    setTimeout(function () {
                        $('#error_cantidad_max').hide();
                    }, 5000);

                    $('#ref_cantidad_max').val('');
                } else {
                    $('#error_cantidad_max').hide();
                }
            }
            $('#menu').val(@ViewBag.id_menu);
            buscarSubGrupo();

            $.ajax({
                url: '/registroReferencias/BuscarHistorico',
                data: {
                    codigo: $('#ref_codigo').val()
                },
                type: "post",
                cache: false,
                success: function (data) {
                    $('#tablaPaginada').find('tbody').empty();
                    for (var i = 0; i < data.length; i++) {
                        $('#tablaPaginada').find('tbody').append('<tr><td align="right">'
                            + data[i].nummov + '</td><td align="left">'
                            + data[i].tpmov + '</td><td align="right">'
                            + data[i].cantidad + '</td><td align="right">'
                            + data[i].stock + '</td><td align="right">'
                            + data[i].fecha + '</td><td align="left">'
                            + data[i].usuario + '</td></tr>');

                    }
                },
                complete: function (data) {
                    $('#tablaPaginada').dataTable({
                        dom: "<''<'col-md-6'l><'col-md-6'f>>t<'col-md-4'i><'col-md-8 text-right'pB>",
                        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                        buttons: [
                            { extend: 'excel', className: 'btn-sm', text: 'Exportar a Excel' },
                            //{ extend: 'copy', className: 'btn-sm' },
                            //{ extend: 'csv', className: 'btn-sm' },
                            //{ extend: 'pdf', className: 'btn-sm' },
                            //{ extend: 'print', className: 'btn-sm' }
                        ]
                    });
                }
            });
        });

        function buscarSubGrupo() {
            $.ajax({
                url: '/registroReferencias/buscarSubGrupo',
                data: {
                    grupo: $('#grupo_id').val(),
                },
                type: "post",
                cache: false,
                success: function (data) {
                    var option = "<option>Seleccione</option>";
                    for (var j = 0; j < data.length; j++) {
                        option += ' <option value="' + data[j].codigo + '">' + data[j].Descripcion + '</option>'
                    }
                    $('#subgrupo').empty();
                    $('#subgrupo').append(option);
                    $('#subgrupo').val('@ViewBag.subgrupo');
                    $('#subgrupo').select2();
                },
                complete: function (data) {

                }
            });
        }
        $('#por_iva').change(function () {
            $('#textIVAVenta').val($('#por_iva option:selected').text());
            $('#valIVAVenta').val($('#por_iva option:selected').val());
        });

        $('#por_iva_compra').change(function () {
            $('#textIVACompra').val($('#por_iva_compra option:selected').text());
            $('#valIVACompra').val($('#por_iva_compra option:selected').val());
        });
        var numero_miles = "";

        function formatNumber(n) {
            n = String(n).replace(/\D/g, "");
            return n === '' ? n : String(n).replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        function miles(id) {
            numero_miles = formatNumber($('#' + id + '').val());
            $('#' + id + '').val(numero_miles);
            //console.log($('#'+id+'').val);
        }

        function addCommas(nStr) {
            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + '.' + '$2');
            }
            return x1 + x2;
        }

        function quitCommas(nStr) {
            nStr.toString();
            //console.log(nStr);
            var s = nStr.replace(/\./g, "");
            return s;
        }

        function valida(e, id)	//Solo numeros y SOLO 1 punto decimal
        {
            var key = (document.all) ? e.which : e.keyCode;
            cadena = $('#' + id + '').val();
            if (cadena.indexOf('.') == -1) {
                return (key <= 13 || (key >= 48 && key <= 57) || key == 46);
            }
            else {
                return (key <= 13 || (key >= 48 && key <= 57));
            }
        }
        var numero_miles = "";

        function formatNumber(n) {
            n = String(n).replace(/\D/g, "");
            return n === '' ? n : String(n).replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        function miles(id) {
            numero_miles = formatNumber($('#' + id + '').val());
            console.log(numero_miles);
            $('#' + id + '').val(numero_miles);
            //console.log($('#'+id+'').val);
        }

        function addCommas(nStr) {
            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + '.' + '$2');
            }
            return x1 + x2;
        }

        function quitCommas(nStr) {
            nStr.toString();
            //console.log(nStr);
            var s = nStr.replace(/\./g, "");
            return s;
        }

        function valida(e, id)	//Solo numeros y SOLO 1 punto decimal
        {
            var key = (document.all) ? e.which : e.keyCode;
            cadena = $('#' + id + '').val();
            if (cadena.indexOf('.') == -1) {
                return (key <= 13 || (key >= 48 && key <= 57) || key == 46);
            }
            else {
                return (key <= 13 || (key >= 48 && key <= 57));
            }
        }

        function AgregarQuitarFavorito() {
            var menu = @ViewBag.id_menu
                $.ajax({
                    url: '/Inicio/AgregarQuitarFavorito',
                    data: {
                        id_menu: menu,
                    },
                    type: "post",
                    cache: false,
                    success: function (data) {
                        if (data.esFavorito == true) {
                            $('#areaFavoritos').html("<i class='fa fa-close'></i>&nbsp;&nbsp;<a href='#' onclick='AgregarQuitarFavorito();return false;'>Quitar de Favoritos</a>");
                        } else {
                            $('#areaFavoritos').html("<i class='fa fa-check'></i>&nbsp;&nbsp;<a href='#' onclick='AgregarQuitarFavorito();return false;'>Agregar a Favoritos</a>");
                        }
                    }
                });
        }

    </script>

}
